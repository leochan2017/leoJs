{
  "name": "Leojs",
  "tagline": "A tool for Javascript",
  "body": "# leoJs - a tool for Javascript\r\n伟大的leoJs诞生了 ヽﾐ ´∀｀ﾐノ＜ \r\n\r\n\r\n## Example codes\r\nleo.helloWorld();\r\n\r\n\r\n## Home Page\r\nhttp://www.leojs.com\r\n\r\nhttp://leochan2017.github.io/leoJs/\r\n\r\n\r\n\r\n---\r\n##API列表\r\n\r\n###leo.getUrlParam(String)\r\n获取浏览器参数\r\n\r\n**调用参数**\r\n\r\n| 参数 | 必填 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------:|:-------------|\r\n| Param | true | String | 需要获取的浏览器参数的Key |\r\n\r\n**返回参数**\r\n\r\n| 参数 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------|\r\n| data | String | 获取的浏览器参数的Value |\r\n\r\n---\r\n\r\n###leo.getCookie(String)\r\n获取cookie\r\n\r\n**调用参数**\r\n\r\n| 参数 | 必填 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------:|:-------------|\r\n| Param | true | String | 要获取的参数名 |\r\n\r\n**返回参数**\r\n\r\n| 参数 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------|\r\n| data | String | 返回cookie的值 |\r\n\r\n---\r\n\r\n###leo.includeJs(Object)\r\n按需加载JS\r\n\r\n**调用参数**\r\n\r\n| 参数 | 必填 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------:|:-------------|\r\n| url | true | String | 传入需要加载的URL |\r\n| succ | false | Function | JS加载成功执行回调 |\r\n\r\n**示例代码**\r\n\r\n```\r\nleo.includeJs({\r\n\turl: 'http://www.leojs.com/leojs.js',\r\n\tsucc: function() {\r\n\t\tconsole.log('加载成功');\r\n\t}\r\n});\r\n```\r\n\r\n---\r\n \r\n###leo.dateFormat(Object)\r\n日期格式化\r\n\r\n**调用参数**\r\n\r\n| 参数 | 必填 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------:|:-------------|\r\n| date | true | Date Object | 日期对象 |\r\n| format | true | String | 格式 |\r\n\r\n**返回参数**\r\n\r\n| 参数 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------|\r\n| data | String | 返回格式化后的日期字符串 |\r\n\r\n**示例代码**\r\n\r\n```\r\n// 查询季度\r\nvar qq = leo.dateFormat({\r\n\tdate: new Date(),\r\n\tformat: 'qq'\r\n});\r\n\r\n// qq: 03\r\n\r\n\r\n// 查询年份\r\nvar year = leo.dateFormat({\r\n\tdate: new Date(),\r\n\tformat: 'yyyy'\r\n});\r\n\r\n// year: 2016\r\n\r\n\r\n// 查询年月\r\nvar ym = leo.dateFormat({\r\n\tdate: new Date(),\r\n\tformat: 'yyyy-MM'\r\n});\r\n\r\n// ym: 2016-12\r\n\r\n\r\n// 查询年月日\r\nvar ymd = leo.dateFormat({\r\n\tdate: new Date(),\r\n\tformat: 'yyyy-MM-dd'\r\n});\r\n\r\n// ymd: 2016-12-07\r\n\r\n\r\n// 查询查询时分秒\r\nvar hms = leo.dateFormat({\r\n\tdate: new Date(),\r\n\tformat: 'hh:mm:ss'\r\n});\r\n\r\n// hms: 17:25:12\r\n\r\n\r\n// 查询年月日时分\r\nvar ymdhm = leo.dateFormat({\r\n\tdate: new Date(),\r\n\tformat: 'yyyy-MM-dd hh:mm'\r\n});\r\n\r\n// ymdhm: 2016-12-07 23:25\r\n\r\n```\r\n\r\n---\r\n\r\n\r\n###leo.log(Anything, Anything)\r\n* 加强console.log显示\r\n* 移动端调试不方便时可以转为alert弹出log内容\r\n* 允许传入参数为1~2个\r\n\r\n**调用参数**\r\n\r\n| 参数 | 必填 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------:|:-------------|\r\n| window.leoType | true | Number | 调试显示的类型，只需整个程序中声明一次即可，0为alert，1为console |\r\n| Param1 | false | Anything | 需要打印的内容 |\r\n| Param2 | false | Anything | 需要打印的内容 |\r\n\r\n**示例代码**\r\n\r\n```\r\nwindow.leoType = 0; // 只需声明一次\r\nleo.log('XXX接口返回', res);\r\n```\r\n\r\n---\r\n\r\n###leo.indexOfArray(Object)\r\n检测数组是否存在某个值\r\n\r\n**调用参数**\r\n\r\n| 参数 | 必填 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------:|:-------------|\r\n| array | true | Array | 待检测数组 |\r\n| value | true | String | 要检测的值 |\r\n\r\n**返回参数**\r\n\r\n| 参数 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------|\r\n| data | Number | 如存在，返回下标；如不存在，返回-1 |\r\n\r\n\r\n**示例代码**\r\n\r\n```\r\nleo.indexOfArray({\r\n    array: ['leo', 'jack', 'tom'],\r\n    value: 'tom'\r\n});\r\n```\r\n\r\n---\r\n    \r\n###leo.cutStr(String)\r\n超出指定长度则在词后增加3个省略点\r\n\r\n**调用参数**\r\n\r\n| 参数 | 必填 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------:|:-------------|\r\n| cutLength | true | Number | 达到某字节长度则剪掉 中文: 2字节 英文:1字节 |\r\n| str | true | String | 要处理的字符串 |\r\n\r\n**返回参数**\r\n\r\n| 参数 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------|\r\n| data | String | 超过长度则返回增加3个点的字符串 |\r\n\r\n\r\n**示例代码**\r\n\r\n```\r\nvar s = leo.cutStr({cutLength:3,str:'asdfghkl'});\r\n```\r\n\r\n---\r\n\r\n    \r\n###leo.getByteLen(String)\r\n获取字符串的字节长度\r\n\r\n**调用参数**\r\n\r\n| 参数 | 必填 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------:|:-------------|\r\n| str | true | String | 要处理的字符串 |\r\n\r\n**返回参数**\r\n\r\n| 参数 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------|\r\n| data | Number | 返回str的字节 |\r\n\r\n\r\n**示例代码**\r\n\r\n```\r\nvar len = leo.getByteLen({str:'jjhjkhkjhjk'})\r\n```\r\n\r\n---\r\n\r\n\r\n###leo.isMobile()\r\n判断当前运行环境是否移动端\r\n\r\n**返回参数**\r\n\r\n| 参数 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------|\r\n| data | Boolean | true: 移动端, false: 非移动端 |\r\n\r\n\r\n**示例代码**\r\n\r\n```\r\nif (leo.isMobile()) {\r\n\tconsole.log('当前是移动端环境');\r\n}\r\n```\r\n\t\r\n---\r\n\r\n###leo.isAndroid()\r\n判断当前运行是否安卓环境\r\n\r\n**返回参数**\r\n\r\n| 参数 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------|\r\n| data | Boolean | true: 安卓, false: 非安卓 |\r\n\r\n\r\n**示例代码**\r\n\r\n```\r\nif (leo.isAndroid()) {\r\n\tconsole.log('当前是安卓环境');\r\n}\r\n```\r\n\r\n---\r\n\t\r\n###leo.htmlInfo\r\n调试用，获取当前的网页信息\r\n\r\n**返回参数**\r\n\r\n| 参数 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------|\r\n| data | console.log | 网页可见区域高，网页可见区域高，网页可见区域高，网页正文全文宽，网页正文全文高，网页被卷去的高，网页被卷去的左，网页正文部分上，网页正文部分左，屏幕分辨率的高，屏幕分辨率的宽，屏幕可用工作区高度，屏幕可用工作区宽度 |\r\n\r\n---\r\n\t\r\n###leo.objInfo(Object)\r\n调试用，获取当前obj里面的信息\r\n\r\n**调用参数**\r\n\r\n| 参数 | 必填 | 类型 | 描述 |\r\n|:-------------|:-------------:|:-------------:|:-------------|\r\n| Object | true | Object | 需要查看的Object |\r\n\r\n**返回参数**\r\n\r\n| 参数 | 类型 | 描述 |\r\n|:-------------|:-------------:|:------------|\r\n| data | console.log | 返回Object的key，value |\r\n\r\n---\r\n\t\r\n###leo.matchNumber(String)\r\n金额数字处理，允许: 正数、负数、正浮点数、负浮点数\r\n\r\n\r\n\r\n**注: 绑定到一个事件，如input，然后 this.value = leo.matchNumber(this.value);**\r\n\r\n---\r\n\r\n###leo.ajax()\r\n链式调用的ajax\r\n\r\n\r\n**调用参数**\r\n\r\n\r\n| 方法 | 参数 | 必填 | 类型 | 描述 |\r\n|:-------------||:-------------:|:-------------:|:-------------|\r\n| get | url, data | true | String, Object | 请求URL, 请求参数， Get请求可以在URL上带上参数，那么第二个参数就可以不传了 |\r\n| post | url, data | true | String, Object | 请求URL, 请求参数 |\r\n| before | Function | false | Function | 请求前置处理回调 |\r\n| succ | Function | false | Function | 请求成功回调 |\r\n| fail | Function | false | Function | 请求失败回调 |\r\n\r\n\r\n**示例代码**\r\n\r\n```\r\nleo.ajax().before([Function]).get|post(url, data).always([Function]).succ([Function]).fail([Function])\r\n```\r\n\r\n**注: always、succ、fail可连续调用多次，即succ().succ().succ()...**\r\n\r\n---\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}